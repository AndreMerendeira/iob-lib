#!/usr/bin/env python3

from latex import write_table

def params_vh(params, top_module, out_dir):
    file2create = open(f"{out_dir}/{top_module}_params.vh", "w")
    file2create.write("//This file was generated by script param_conf.py\n\n")
    core_prefix = f"{top_module}_".upper()
    for parameter in params:
        if parameter['type']=='P':
            p_name = parameter['name'].upper()
            file2create.write(f"\tparameter {p_name} = `{core_prefix}{p_name},\n")
    file2create.close()

    file2create = open(f"{out_dir}/{top_module}_inst_params.vh", "w")
    file2create.write("//This file was generated by script param_conf.py\n\n")
    core_prefix = f"{top_module}_".upper()
    for parameter in params:
        if parameter['type']=='P':
            p_name = parameter['name'].upper()
            file2create.write(f"\t.{p_name}(`{core_prefix}{p_name}),\n")
    file2create.close()

def conf_vh(macros, top_module, out_dir):
    file2create = open(f"{out_dir}/{top_module}_conf.vh", "w")
    file2create.write("//This file was generated by script param_conf.py\n\n")
    core_prefix = f"{top_module}_".upper()
    fname = f"{core_prefix}CONF"
    file2create.write(f"`ifndef VH_{fname}_VH\n")
    file2create.write(f"`define VH_{fname}_VH\n\n")
    for macro in macros:
        m_name = macro['name'].upper()
        m_default_val = macro['val']
        file2create.write(f"`define {core_prefix}{m_name} ({m_default_val})\n")
    file2create.write(f"\n`endif // VH_{fname}_VH\n")

# Generate TeX table of macros
def generate_macros_tex(confs, out_dir):
    tex_table = []
    for conf in confs:
        # Only insert macros
        if conf['type'] == 'M':
            tex_table.append([conf['name'].replace('_','\_'), conf['min'], conf['val'], conf['max'], conf['descr']])

    write_table(f"{out_dir}/sm",tex_table)

# Generate TeX table of parameters
def generate_params_tex(confs, out_dir):
    tex_table = []
    for conf in confs:
        # Only insert parameters
        if conf['type'] == 'P':
            tex_table.append([conf['name'].replace('_','\_'), conf['min'], conf['val'], conf['max'], conf['descr']])

    write_table(f"{out_dir}/sp",tex_table)
